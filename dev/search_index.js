var documenterSearchIndex = {"docs":
[{"location":"api_io/#I-/-O","page":"I / O","title":"I / O","text":"","category":"section"},{"location":"api_io/","page":"I / O","title":"I / O","text":"read_dict\nwrite_jld\nplot_line","category":"page"},{"location":"api_io/#Kinetic.read_dict","page":"I / O","title":"Kinetic.read_dict","text":"Read text into dictionary\n\nread_dict(filename::String, allowed)\nread_dict(filename::String)\n\n@args filename: configuration text file\n@args allowed: keywords\n@return vars: dictionary with values of variables\n\n\n\n\n\n","category":"function"},{"location":"api_io/#Kinetic.write_jld","page":"I / O","title":"Kinetic.write_jld","text":"Write data into JLD2\n\nwrite_jld(KS, ctr, t)\n\n\n\n\n\n","category":"function"},{"location":"api_io/#Kinetic.plot_line","page":"I / O","title":"Kinetic.plot_line","text":"Plot 1D profile\n\nplot_line(KS, ctr; backend)\n\n\n\n\n\n","category":"function"},{"location":"algorithm/#Solution-Algorithm","page":"Solution Algorithm","title":"Solution Algorithm","text":"","category":"section"},{"location":"algorithm/","page":"Solution Algorithm","title":"Solution Algorithm","text":"The finite volume method (FVM) is employed in this package. The general solution algorithm can be conclude as follows, where both explicit and implicit methods are implemented.","category":"page"},{"location":"algorithm/","page":"Solution Algorithm","title":"Solution Algorithm","text":"(Image: )","category":"page"},{"location":"algorithm/","page":"Solution Algorithm","title":"Solution Algorithm","text":"pre-process: initialize(configfilename::AbstractString)","category":"page"},{"location":"algorithm/","page":"Solution Algorithm","title":"Solution Algorithm","text":"new run: .txt / .cfg / .toml\nrestart: .jld2 (HDF5) -> solSet, ctr, face, t","category":"page"},{"location":"algorithm/","page":"Solution Algorithm","title":"Solution Algorithm","text":"calculate timestep based on the CFL condition\nreconstruct field solutions","category":"page"},{"location":"algorithm/","page":"Solution Algorithm","title":"Solution Algorithm","text":"van-Leer\nminmod\nsuperbee\nWENO","category":"page"},{"location":"algorithm/","page":"Solution Algorithm","title":"Solution Algorithm","text":"evolve numerical fluxes","category":"page"},{"location":"algorithm/","page":"Solution Algorithm","title":"Solution Algorithm","text":"macroscopic: Godunov, Lax, Roe, HLL, wave-propagation\nmesoscopic: upwind, central-upwind, gas-kinetic scheme","category":"page"},{"location":"algorithm/","page":"Solution Algorithm","title":"Solution Algorithm","text":"update cell-averaged variables","category":"page"},{"location":"algorithm/","page":"Solution Algorithm","title":"Solution Algorithm","text":"explicit\nimplicit\nimplicit-explicit (IMEX)","category":"page"},{"location":"algorithm/","page":"Solution Algorithm","title":"Solution Algorithm","text":"post-process","category":"page"},{"location":"type/#Data-Structure","page":"Data Structure","title":"Data Structure","text":"","category":"section"},{"location":"type/","page":"Data Structure","title":"Data Structure","text":"ControlVolume1D\nControlVolume1D1F\nControlVolume1D2F\nControlVolume1D3F\nControlVolume1D4F\nControlVolume2D\nControlVolume2D1F\nControlVolume2D2F\nControlVolume2D3F","category":"page"},{"location":"type/#Kinetic.ControlVolume1D","page":"Data Structure","title":"Kinetic.ControlVolume1D","text":"1D control volume with no distribution function\n\nControlVolume1D(X::Real, DX::Real, W::AbstractArray, PRIM::AbstractArray)\n\n@vars: x, dx, w, prim, sw\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.ControlVolume1D1F","page":"Data Structure","title":"Kinetic.ControlVolume1D1F","text":"1D control volume with 1 distribution function\n\nControlVolume1D1F(X::Real, DX::Real, W::AbstractArray, PRIM::AbstractArray, F::AbstractArray)\n\n@vars: x, dx, w, prim, sw, f, sf\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.ControlVolume1D2F","page":"Data Structure","title":"Kinetic.ControlVolume1D2F","text":"1D control volume with 2 distribution functions\n\nControlVolume1D2F(X::Real, DX::Real, W::AbstractArray, PRIM::AbstractArray, H::AbstractArray, B::AbstractArray)\n\n@vars: x, dx, w, prim, sw, h, b, sh, sb\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.ControlVolume1D3F","page":"Data Structure","title":"Kinetic.ControlVolume1D3F","text":"1D control volume with 3 distribution functions\n\nControlVolume1D3F(X, DX, W, PRIM, H0, H1, H2, E0, B0, L)\n\n@vars: x, dx, w, prim, sw, h0, h1, h2, sh0, sh1, sh2, E, B, ϕ, ψ, lorenz\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.ControlVolume1D4F","page":"Data Structure","title":"Kinetic.ControlVolume1D4F","text":"1D control volume with 4 distribution functions\n\nControlVolume1D4F(X, DX, W, PRIM, H0, H1, H2, H3, E0, B0, L)\n\n@vars: x, dx, w, prim, sw, h0, h1, h2, h3, sh0, sh1, sh2, sh3, E, B, ϕ, ψ, lorenz\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.ControlVolume2D","page":"Data Structure","title":"Kinetic.ControlVolume2D","text":"2D control volume with no distribution function\n\nControlVolume2D(X::Real, DX::Real, Y::Real, DY::Real, W::AbstractArray, PRIM::AbstractArray)\n\n@vars: x, y, dx, dy, w, prim, sw\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.ControlVolume2D1F","page":"Data Structure","title":"Kinetic.ControlVolume2D1F","text":"2D control volume with 1 distribution function\n\nControlVolume2D1F(X::Real, DX::Real, Y::Real, DY::Real, W::AbstractArray, PRIM::AbstractArray, F::AbstractArray)\n\n@vars: x, y, dx, dy, w, prim, sw, f, sf\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.ControlVolume2D2F","page":"Data Structure","title":"Kinetic.ControlVolume2D2F","text":"2D control volume with 2 distribution functions\n\nControlVolume2D2F(X::Real, DX::Real, Y::Real, DY::Real, W::AbstractArray, PRIM::AbstractArray, H::AbstractArray, B::AbstractArray)\n\n@vars: x, y, dx, dy, w, prim, sw, h, b, sh, sb\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.ControlVolume2D3F","page":"Data Structure","title":"Kinetic.ControlVolume2D3F","text":"2D control volume with 3 distribution functions\n\nControlVolume2D3F(X, DX, Y, DY, W, PRIM, H0, H1, H2, E0, B0, L)\n\n@vars: x, y, dx, dy, w, prim, sw, h0, h1, h2, sh0, sh1, sh2, E, B, ϕ, ψ, lorenz\n\n\n\n\n\n","category":"type"},{"location":"api_math/#Math","page":"Math","title":"Math","text":"","category":"section"},{"location":"api_math/","page":"Math","title":"Math","text":"linspace\nheaviside\nfortsign\nmat_split\ncentral_diff\ncentral_diff!\nupwind_diff\nupwind_diff!\nunstruct_diff\nlgwt\nextract_last","category":"page"},{"location":"api_math/#Kinetic.linspace","page":"Math","title":"Kinetic.linspace","text":"Python linspace function\n\nlinspace(start::Real, stop::Real, n::Int)\n\n\n\n\n\n","category":"function"},{"location":"api_math/#Kinetic.heaviside","page":"Math","title":"Kinetic.heaviside","text":"Heaviside step function\n\nheaviside(x::Real)\n\n\n\n\n\n","category":"function"},{"location":"api_math/#Kinetic.fortsign","page":"Math","title":"Kinetic.fortsign","text":"Fortran sign function\n\nfortsign(x::Real, y::Real)\n\n\n\n\n\n","category":"function"},{"location":"api_math/#Kinetic.mat_split","page":"Math","title":"Kinetic.mat_split","text":"Split matrix into row vectors\n\nmat_split(m::AbstractArray)\n\n\n\n\n\n","category":"function"},{"location":"api_math/#Kinetic.central_diff","page":"Math","title":"Kinetic.central_diff","text":"Central difference\n\ncentral_diff(y::AbstractArray{<:Any,1}, x::AbstractArray{<:Any,1})\n\ncentral_diff(y::AbstractArray{<:Any,1}, dx::Any)\n\n\n\n\n\n","category":"function"},{"location":"api_math/#Kinetic.central_diff!","page":"Math","title":"Kinetic.central_diff!","text":"Central difference\n\ncentral_diff!(dy::AbstractArray{<:Any,1}, y::AbstractArray{<:Any,1}, x::AbstractArray{<:Any,1})\n\ncentral_diff!(dy::AbstractArray{<:Any,1}, y::AbstractArray{<:Any,1}, dx::Any)\n\n\n\n\n\n","category":"function"},{"location":"api_math/#Kinetic.upwind_diff","page":"Math","title":"Kinetic.upwind_diff","text":"Upwind difference\n\nupwind_diff(\n    y::AbstractArray{<:Any,1},\n    x::AbstractArray{<:Any,1};\n    stream = :right::Symbol,\n)\n\nupwind_diff(y::AbstractArray{<:Any,1}, dx::Any; stream = :right::Symbol)\n\n\n\n\n\n","category":"function"},{"location":"api_math/#Kinetic.upwind_diff!","page":"Math","title":"Kinetic.upwind_diff!","text":"Upwind difference\n\nupwind_diff!(\n    dy::AbstractArray{<:Any,1},\n    y::AbstractArray{<:Any,1},\n    x::AbstractArray{<:Any,1};\n    stream = :right::Symbol,\n)\n\nupwind_diff!(\n    dy::AbstractArray{<:Any,1},\n    y::AbstractArray{<:Any,1},\n    dx::Any;\n    stream = :right::Symbol,\n)\n\n\n\n\n\n","category":"function"},{"location":"api_math/#Kinetic.unstruct_diff","page":"Math","title":"Kinetic.unstruct_diff","text":"Finite difference for pseudo-unstructured mesh\n\nunstruct_diff(\n    u::AbstractArray{<:Any,1},\n    x::AbstractArray{<:Any,1},\n    nx::Int;\n    mode = :central::Symbol,\n)\n\nunstruct_diff(u::Function, x::AbstractArray{<:Any,2}, nx::Int, dim::Int; mode = :central::Symbol)\n\n\n\n\n\n","category":"function"},{"location":"#Home","page":"Home","title":"Home","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Kinetic.jl is a lightweight toolbox for modeling and simulation on the basis of kinetic theory of gases, photons, plasmas and neutrons.  It can be used to solve either Boltzmann and related model equations","category":"page"},{"location":"","page":"Home","title":"Home","text":"fracpartial fpartial t+ mathbf u cdot nabla_mathbf x f + mathbf a cdot nabla_mathbf u f = int_mathcal R^3 int_mathcal S^2 B (f(mathbf u_*)f(mathbf u)-f(mathbf u_*) f(mathbf u)) dOmega dmathbf u_*","category":"page"},{"location":"","page":"Home","title":"Home","text":"or their upscaling moment system","category":"page"},{"location":"","page":"Home","title":"Home","text":"fracpartial mathbf Wpartial t + nabla_mathbf x cdot mathbf F = mathbf S","category":"page"},{"location":"","page":"Home","title":"Home","text":"The package is registered in the Julialang official entry and compatible with Julia 1.3 or newer version.  To make use of it, execute Julia and type","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ]\n(v1.3) pkg> add Kinetic","category":"page"},{"location":"","page":"Home","title":"Home","text":"This will install Kinetic and all its dependencies. After that, load the package,","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using Kinetic","category":"page"}]
}
