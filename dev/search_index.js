var documenterSearchIndex = {"docs":
[{"location":"api_theory/#Theory","page":"Theory","title":"Theory","text":"","category":"section"},{"location":"api_theory/","page":"Theory","title":"Theory","text":"prim_conserve\nconserve_prim\nmixture_prim_conserve\nmixture_conserve_prim\nem_coefficients\nadvection_flux\nburgers_flux\neuler_flux\neuler_jacobi\ngauss_moments\nmixture_gauss_moments\nmoments_conserve\nmixture_moments_conserve\npdf_slope\nmixture_pdf_slope\nmoments_conserve_slope\nmixture_moments_conserve_slope\ndiscrete_moments\nstress\nheat_flux\nmaxwellian\nmixture_maxwellian\nshakhov\nreduce_distribution\nfull_distribution\nref_vhs_vis\nvhs_collision_time\naap_hs_collision_time\naap_hs_prim\naap_hs_diffeq!\nshift_pdf!\nhs_boltz_kn\nkernel_mode\nboltzmann_fft\nboltzmann_fft!\nheat_capacity_ratio\nsound_speed","category":"page"},{"location":"api_theory/#Kinetic.prim_conserve","page":"Theory","title":"Kinetic.prim_conserve","text":"Transform primitive -> conservative variables\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.conserve_prim","page":"Theory","title":"Kinetic.conserve_prim","text":"Transform conservative -> primitive variables\n\nscalar: pseudo primitive vector for scalar conservation laws\nvector: primitive vector for Euler, Navier-Stokes and extended equations\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.em_coefficients","page":"Theory","title":"Kinetic.em_coefficients","text":"Calculate electromagnetic coeffcients in hyperbolic Maxwell's equations\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.advection_flux","page":"Theory","title":"Kinetic.advection_flux","text":"Theoretical flux of linear advection equation\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.burgers_flux","page":"Theory","title":"Kinetic.burgers_flux","text":"Theoretical flux of Burgers' equation\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.euler_flux","page":"Theory","title":"Kinetic.euler_flux","text":"Theoretical fluxes of Euler Equations\n\neuler_flux(w::AbstractArray{<:Real,1}, γ::Real; frame = :cartesian::Symbol)\n\n@return: flux tuple\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.euler_jacobi","page":"Theory","title":"Kinetic.euler_jacobi","text":"Flux Jacobian of Euler Equations\n\neuler_jacobi(w::AbstractArray{<:Real,1}, γ::Real)\n\n@return: Jacobian matrix A\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.gauss_moments","page":"Theory","title":"Kinetic.gauss_moments","text":"Calculate moments of Gaussian distribution G = (λ / π)^(D / 2) * exp[-λ(c^2 + ξ^2)]\n\ninternality: gauss_moments(prim::AbstractArray{<:Real,1}, inK::Real)\nno internality: gauss_moments(prim::AbstractArray{<:Real,1})\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.mixture_gauss_moments","page":"Theory","title":"Kinetic.mixture_gauss_moments","text":"Calculate moments of Gaussian distribution in multi-component gas\n\nmixture_gauss_moments(prim::AbstractArray{<:Real,2}, inK::Real)\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.moments_conserve","page":"Theory","title":"Kinetic.moments_conserve","text":"Calculate conservative moments of particle distribution\n\nmoments_conserve(Mu::OffsetArray{<:AbstractFloat,1}, alpha::Int)\n\nmoments_conserve(Mu::OffsetArray{<:Real,1}, Mxi::OffsetArray{<:Real,1},      alpha::Int, delta::Int)\n\nmoments_conserve(Mu::OffsetArray{<:Real,1}, Mv::OffsetArray{<:Real,1},     Mw::OffsetArray{<:Real,1}, alpha::Int, beta::Int, delta::Int)\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.mixture_moments_conserve","page":"Theory","title":"Kinetic.mixture_moments_conserve","text":"Calculate conservative moments of particle distribution in multi-component gas\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.pdf_slope","page":"Theory","title":"Kinetic.pdf_slope","text":"Calculate slope of particle distribution function, assuming a = a1 + u * a2 + 0.5 * u^2 * a3\n\npdf_slope(u::Real, Δ::Real)\n\npdf_slope(prim::AbstractArray{<:Real,1}, sw::AbstractArray{<:Real,1}, inK::Real)\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.mixture_pdf_slope","page":"Theory","title":"Kinetic.mixture_pdf_slope","text":"Calculate slope of multi-component particle distribution function,  assuming a = a1 + u * a2 + 0.5 * u^2 * a3\n\nmixture_pdf_slope(prim::AbstractArray{<:Real,2}, sw::AbstractArray{<:Real,2}, inK::Real)\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.moments_conserve_slope","page":"Theory","title":"Kinetic.moments_conserve_slope","text":"Calculate slope-related conservative moments  a = a1 + u * a2 + 0.5 * u^2 * a3\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.mixture_moments_conserve_slope","page":"Theory","title":"Kinetic.mixture_moments_conserve_slope","text":"Calculate slope-related conservative moments  a = a1 + u * a2 + 0.5 * u^2 * a3\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.discrete_moments","page":"Theory","title":"Kinetic.discrete_moments","text":"Discrete moments of particle distribution\n\ndiscrete_moments(f, ω): direct quadrature\ndiscrete_moments(f, u, ω, n): velocity moments\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.stress","page":"Theory","title":"Kinetic.stress","text":"Calculate stress tensor from particle distribution function\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.heat_flux","page":"Theory","title":"Kinetic.heat_flux","text":"Calculate heat flux from particle distribution function\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.maxwellian","page":"Theory","title":"Kinetic.maxwellian","text":"Maxwellian in discrete form\n\n@arg: particle velocity quadrature points\n@arg: density, velocity and inverse of temperature\n@return: Maxwellian distribution function\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.shakhov","page":"Theory","title":"Kinetic.shakhov","text":"Shakhov non-equilibrium part\n\n@arg: particle velocity quadrature points\n@arg: discrete Maxwellian\n@arg: primitive variables, Prandtl number, heat flux, inner degree of freedom\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.reduce_distribution","page":"Theory","title":"Kinetic.reduce_distribution","text":"Reduced distribution function\n\n@arg : particle distribution function with full velocity space\n@arg : quadrature weights with reduced velocity setting (v & w by default)\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.ref_vhs_vis","page":"Theory","title":"Kinetic.ref_vhs_vis","text":"Calculate reference viscosity\n\nvariable hard sphere (VHS) model\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.vhs_collision_time","page":"Theory","title":"Kinetic.vhs_collision_time","text":"Calculate collision time\n\nvariable hard sphere (VHS) model\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.aap_hs_collision_time","page":"Theory","title":"Kinetic.aap_hs_collision_time","text":"Calculate mixture collision time from AAP model\n\naap_hs_collision_time(     prim::AbstractArray{<:Real,2},     mi::Real,     ni::Real,     me::Real,     ne::Real,     kn::Real, )\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.aap_hs_prim","page":"Theory","title":"Kinetic.aap_hs_prim","text":"Calculate mixture primitive variables from AAP model\n\ntested √\n\naap_hs_prim(     prim::AbstractArray{<:Real,2},     tau::AbstractArray{<:Real,1},     mi::Real,     ni::Real,     me::Real,     ne::Real,     kn::Real, )\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.aap_hs_diffeq!","page":"Theory","title":"Kinetic.aap_hs_diffeq!","text":"Source term of AAP model in DifferentialEquations.jl\n\naap_hs_diffeq!(du, u, p, t)\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.shift_pdf!","page":"Theory","title":"Kinetic.shift_pdf!","text":"Shift distribution function by external force\n\nshift_pdf!(     f::AbstractArray{<:AbstractFloat,1},     a::Real,     du::AbstractFloat,     dt::Real, )\n\nshift_pdf!(     f::AbstractArray{<:AbstractFloat,2},     a::AbstractArray{<:Real,1},     du::AbstractArray{<:AbstractFloat,1},     dt::Real, )\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.hs_boltz_kn","page":"Theory","title":"Kinetic.hs_boltz_kn","text":"Calculate effective Knudsen number for fast spectral method\n\nhard sphere (HS) model\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.kernel_mode","page":"Theory","title":"Kinetic.kernel_mode","text":"Calculate collision kernel for fast spectral method\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.boltzmann_fft","page":"Theory","title":"Kinetic.boltzmann_fft","text":"Calculate collision operator with FFT-based fast spectral method\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.heat_capacity_ratio","page":"Theory","title":"Kinetic.heat_capacity_ratio","text":"Calculate heat capacity ratio\n\n\n\n\n\n","category":"function"},{"location":"api_theory/#Kinetic.sound_speed","page":"Theory","title":"Kinetic.sound_speed","text":"Calculate speed of sound\n\n\n\n\n\n","category":"function"},{"location":"api_io/#I-/-O","page":"I / O","title":"I / O","text":"","category":"section"},{"location":"api_io/","page":"I / O","title":"I / O","text":"read_dict\nwrite_jld\nplot_line","category":"page"},{"location":"api_io/#Kinetic.read_dict","page":"I / O","title":"Kinetic.read_dict","text":"Read text into dictionary\n\nread_dict(filename::String, allowed)\nread_dict(filename::String)\n\n@args filename: configuration text file\n@args allowed: keywords\n@return vars: dictionary with values of variables\n\n\n\n\n\n","category":"function"},{"location":"api_io/#Kinetic.write_jld","page":"I / O","title":"Kinetic.write_jld","text":"Write data into JLD2\n\nwrite_jld(KS, ctr, t)\n\n\n\n\n\n","category":"function"},{"location":"api_io/#Kinetic.plot_line","page":"I / O","title":"Kinetic.plot_line","text":"Plot 1D profile\n\nplot_line(KS, ctr; backend)\n\n\n\n\n\n","category":"function"},{"location":"install/#Installation-Instructions","page":"Installation","title":"Installation Instructions","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"Kinetic.jl is a registered Julialang package in the official entry. You can install the latest version using the built-in package manager (accessed by pressing ] in the Julia command prompt) to add the package and instantiate/build all dependencies.","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"julia> ]\n(v1.5) pkg> add Kinetic\n(v1.5) pkg> build Kinetic","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"This will install Kinetic and all its dependencies. After that, load the package,","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"julia> using Kinetic","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"Kinetic.jl can be updated to the latest tagged release from the package manager by typing","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"(v1.5) pkg> update Kinetic","category":"page"},{"location":"api_config/#Configuration","page":"Configuration","title":"Configuration","text":"","category":"section"},{"location":"api_config/","page":"Configuration","title":"Configuration","text":"ib_rh\nib_sod\nib_briowu\nib_cavity","category":"page"},{"location":"api_config/#Kinetic.ib_rh","page":"Configuration","title":"Kinetic.ib_rh","text":"Initialize Rankine-Hugoniot relation\n\n1d1f1v: ib_rh(MaL::Real, gam::Real, u::AbstractArray{<:AbstractFloat,1})\n1d2f1v: ib_rh(MaL::Real, gam::Real, u::AbstractArray{<:AbstractFloat,1}, K::Real)\n1d1f3v: ib_rh(MaL::Real, gam::Real, u::AbstractArray{Float64,3}, v::AbstractArray{Float64,3}, w::AbstractArray{Float64,3})\n\n\n\n\n\n","category":"function"},{"location":"api_config/#Kinetic.ib_sod","page":"Configuration","title":"Kinetic.ib_sod","text":"Initialize Sod shock tube\n\n1d1f1v: ib_sod(γ::Real, u::AbstractArray{<:AbstractFloat,1})\n1d1f3v: ib_sod(γ::Real, u::AbstractArray{<:AbstractFloat,3}, v::AbstractArray{<:AbstractFloat,3}, w::AbstractArray{<:AbstractFloat,3})\n1d2f1v: ib_sod(γ::Real, u::AbstractArray{<:AbstractFloat,1}, K::Real)\n\n\n\n\n\n","category":"function"},{"location":"api_config/#Kinetic.ib_briowu","page":"Configuration","title":"Kinetic.ib_briowu","text":"Initialize Brio-Wu MHD shock\n\nib_briowu(gam::Real, uspace::AbstractArray{<:AbstractFloat,2}, mi::Real, me::Real)\n\n\n\n\n\n","category":"function"},{"location":"api_config/#Kinetic.ib_cavity","page":"Configuration","title":"Kinetic.ib_cavity","text":"Initialize lid-driven cavity\n\n2d1f2v: ib_cavity(gam::Real, Um::Real, Vm::Real, Tm::Real, u::AbstractArray{<:AbstractFloat,2}, v::AbstractArray{<:AbstractFloat,2})\n2d2f2v: ib_cavity(gam::Real, Um::Real, Vm::Real, Tm::Real, u::AbstractArray{<:AbstractFloat,2}, v::AbstractArray{<:AbstractFloat,2}, K::Real)\n\n\n\n\n\n","category":"function"},{"location":"api_geo/#Physical-Space","page":"Physical Space","title":"Physical Space","text":"","category":"section"},{"location":"api_geo/","page":"Physical Space","title":"Physical Space","text":"global_frame\nlocal_frame\nPSpace1D\nPSpace2D\nuniform_mesh\nmeshgrid\nUnstructMesh \nread_mesh\nmesh_connectivity_2D\nmesh_center_2D\nmesh_area_2D","category":"page"},{"location":"api_geo/#Kinetic.global_frame","page":"Physical Space","title":"Kinetic.global_frame","text":"Transform local flow variables to global frame\n\n2D: global_frame(w::AbstractArray{<:Real,1}, cosa::Real, sina::Real)\n3D: global_frame(w::AbstractArray{<:Real,1}, dirccos::AbstractArray{<:Real,2})\n\n\n\n\n\n","category":"function"},{"location":"api_geo/#Kinetic.local_frame","page":"Physical Space","title":"Kinetic.local_frame","text":"Transform global flow variables to local frame\n\n2D: local_frame(w::AbstractArray{<:Real,1}, cosa::Real, sina::Real)\n3D: local_frame(w::AbstractArray{<:Real,1}, dirccos::AbstractArray{<:Real,2})\n\n\n\n\n\n","category":"function"},{"location":"api_geo/#Kinetic.PSpace1D","page":"Physical Space","title":"Kinetic.PSpace1D","text":"1D physical space with structured mesh\n\n@consts: x0, x1, nx, x, dx\n\n\n\n\n\n","category":"type"},{"location":"api_geo/#Kinetic.PSpace2D","page":"Physical Space","title":"Kinetic.PSpace2D","text":"2D Physical space with structured mesh\n\n@consts: x0, x1, nx, y0, y1, ny, x, y, dx, dy\n\n\n\n\n\n","category":"type"},{"location":"api_geo/#Kinetic.uniform_mesh","page":"Physical Space","title":"Kinetic.uniform_mesh","text":"Generate uniform mesh\n\nuniform_mesh(x0::Real, xnum::Int, dx::Real)\n\n\n\n\n\n","category":"function"},{"location":"api_geo/#Kinetic.meshgrid","page":"Physical Space","title":"Kinetic.meshgrid","text":"Equivalent structured mesh generator as matlab\n\n2D: meshgrid(x::AbstractArray{<:Real,1}, y::AbstractArray{<:Real,1})\n3D: meshgrid(x::AbstractArray{<:Real,1}, y::AbstractArray{<:Real,1}, z::AbstractArray{<:Real,1})\n\n\n\n\n\n","category":"function"},{"location":"api_geo/#Kinetic.UnstructMesh","page":"Physical Space","title":"Kinetic.UnstructMesh","text":"Physical space with unstructured mesh\n\n@consts: nodes, cells\n\n\n\n\n\n","category":"type"},{"location":"api_geo/#Kinetic.read_mesh","page":"Physical Space","title":"Kinetic.read_mesh","text":"Read mesh file\n\nread_mesh(file)\n\n@return nodes : are saved with 3D coordinates (z=0 for 2D case)\n@return cells : node ids inside cells\n\n\n\n\n\n","category":"function"},{"location":"api_geo/#Kinetic.mesh_connectivity_2D","page":"Physical Space","title":"Kinetic.mesh_connectivity_2D","text":"Compute connectivity of 2D unstructured mesh\n\nmesh_connectivity_2D(cells::AbstractArray{<:Int,2})\n\n\n\n\n\n","category":"function"},{"location":"api_geo/#Kinetic.mesh_center_2D","page":"Physical Space","title":"Kinetic.mesh_center_2D","text":"Compute central points of 2D elements\n\nmesh_center_2D(nodes::AbstractArray{<:AbstractFloat,2}, cells::AbstractArray{<:Int,2})\n\n\n\n\n\n","category":"function"},{"location":"api_geo/#Kinetic.mesh_area_2D","page":"Physical Space","title":"Kinetic.mesh_area_2D","text":"Compute areas of 2D elements\n\nmesh_area_2D(nodes::AbstractArray{<:AbstractFloat,2}, cells::AbstractArray{<:Int,2})\n\n\n\n\n\n","category":"function"},{"location":"api_phase/#Phase-Space","page":"Phase Space","title":"Phase Space","text":"","category":"section"},{"location":"api_phase/","page":"Phase Space","title":"Phase Space","text":"VSpace1D\nVSpace2D\nVSpace3D\nMVSpace1D\nMVSpace2D\nMVSpace3D\nnewton_cotes\nlegendre_quadrature\nocta_quadrature\nquadrature_weights","category":"page"},{"location":"api_phase/#Kinetic.VSpace1D","page":"Phase Space","title":"Kinetic.VSpace1D","text":"Structure of velocity space\n\n\n\n\n\n","category":"type"},{"location":"api_phase/#Kinetic.newton_cotes","page":"Phase Space","title":"Kinetic.newton_cotes","text":"Newton-Cotes rule\n\n\n\n\n\n","category":"function"},{"location":"api_phase/#Kinetic.legendre_quadrature","page":"Phase Space","title":"Kinetic.legendre_quadrature","text":"Gauss-Legendre quadrature\n\nlegendre_quadrature(n::Int)\n\n@arg n : quadrature order (MUST be even)\n@return points : quadrature points in 3D coordinate\n@return weights : quadrature weights\n\n\n\n\n\n","category":"function"},{"location":"api_phase/#Kinetic.octa_quadrature","page":"Phase Space","title":"Kinetic.octa_quadrature","text":"Octaeder quadrature\n\nocta_quadrature(n::Int, slerpflag = true::Bool)\n\n@arg n : quadrature order\n@arg slerpflag : flag of spherical linear interpolation\n@return points\n@return triangulation\n\n\n\n\n\n","category":"function"},{"location":"api_phase/#Kinetic.quadrature_weights","page":"Phase Space","title":"Kinetic.quadrature_weights","text":"Create quadrature weights from points and triangulation\n\ncreate_weights(n::Int, xyz::AbstractArray{<:Real,2}, triangles::AbstractArray{Int,2})\n\n@arg xyz : quadrature points\n@arg triangles : triangulation\n@return weights : quadrature weights\n\n\n\n\n\n","category":"function"},{"location":"api_reconstruct/#Reconstruction","page":"Reconstruction","title":"Reconstruction","text":"","category":"section"},{"location":"api_reconstruct/","page":"Reconstruction","title":"Reconstruction","text":"vanleer\nminmod\nsuperbee\nvanalbaba\nreconstruct2\nreconstruct2!\nreconstruct3\nreconstruct3!\nweno5","category":"page"},{"location":"api_reconstruct/#Kinetic.vanleer","page":"Reconstruction","title":"Kinetic.vanleer","text":"van Leer limiter\n\nvanleer(sL::Real, sR::Real)\n\n\n\n\n\n","category":"function"},{"location":"api_reconstruct/#Kinetic.minmod","page":"Reconstruction","title":"Kinetic.minmod","text":"minmod limiter\n\nminmod(sL::Real, sR::Real)\n\n\n\n\n\n","category":"function"},{"location":"api_reconstruct/#Kinetic.superbee","page":"Reconstruction","title":"Kinetic.superbee","text":"superbee limiter\n\nsuperbee(sL::Real, sR::Real)\n\n\n\n\n\n","category":"function"},{"location":"api_reconstruct/#Kinetic.vanalbaba","page":"Reconstruction","title":"Kinetic.vanalbaba","text":"van Albaba limiter\n\nvanalbaba(sL::Real, sR::Real)\n\n\n\n\n\n","category":"function"},{"location":"api_reconstruct/#Kinetic.reconstruct2","page":"Reconstruction","title":"Kinetic.reconstruct2","text":"Two-cell reconstruction\n\n\n\n\n\n","category":"function"},{"location":"api_reconstruct/#Kinetic.reconstruct3","page":"Reconstruction","title":"Kinetic.reconstruct3","text":"Three-cell reconstruction\n\n\n\n\n\n","category":"function"},{"location":"api_solver/#Solver","page":"Solver","title":"Solver","text":"","category":"section"},{"location":"api_solver/","page":"Solver","title":"Solver","text":"Kinetic.initialize\ninit_fvm\nSolverSet\nset_ib\nsolve!\nKinetic.timestep\nreconstruct!\nevolve!\nupdate!\nupdate_boundary!\nstep!","category":"page"},{"location":"api_solver/#Kinetic.initialize","page":"Solver","title":"Kinetic.initialize","text":"Initialize solver from input file\n\n\n\n\n\n","category":"function"},{"location":"api_solver/#Kinetic.SolverSet","page":"Solver","title":"Kinetic.SolverSet","text":"Structure of solver setup\n\n\n\n\n\n","category":"type"},{"location":"api_solver/#Kinetic.timestep","page":"Solver","title":"Kinetic.timestep","text":"Timestep calculator\n\n1D solver: timestep(KS::SolverSet, ctr::AbstractArray{<:AbstractControlVolume1D,1},   simTime::Real)\n@return: Δt\n\n\n\n\n\n","category":"function"},{"location":"type/#Data-Structure","page":"Type","title":"Data Structure","text":"","category":"section"},{"location":"type/","page":"Type","title":"Type","text":"ControlVolume1D\nControlVolume1D1F\nControlVolume1D2F\nControlVolume1D3F\nControlVolume1D4F\nControlVolume2D\nControlVolume2D1F\nControlVolume2D2F\nControlVolume2D3F\nInterface1D\nInterface1D1F\nInterface1D2F\nInterface1D3F\nInterface1D4F\nInterface2D\nInterface2D1F\nInterface2D2F","category":"page"},{"location":"type/#Kinetic.ControlVolume1D","page":"Type","title":"Kinetic.ControlVolume1D","text":"1D control volume with no distribution function\n\nControlVolume1D(X::Real, DX::Real, W::AbstractArray, PRIM::AbstractArray)\n\n@vars: x, dx, w, prim, sw\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.ControlVolume1D1F","page":"Type","title":"Kinetic.ControlVolume1D1F","text":"1D control volume with 1 distribution function\n\nControlVolume1D1F(X::Real, DX::Real, W::AbstractArray, PRIM::AbstractArray, F::AbstractArray)\n\n@vars: x, dx, w, prim, sw, f, sf\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.ControlVolume1D2F","page":"Type","title":"Kinetic.ControlVolume1D2F","text":"1D control volume with 2 distribution functions\n\nControlVolume1D2F(X::Real, DX::Real, W::AbstractArray, PRIM::AbstractArray, H::AbstractArray, B::AbstractArray)\n\n@vars: x, dx, w, prim, sw, h, b, sh, sb\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.ControlVolume1D3F","page":"Type","title":"Kinetic.ControlVolume1D3F","text":"1D control volume with 3 distribution functions\n\nControlVolume1D3F(X, DX, W, PRIM, H0, H1, H2, E0, B0, L)\n\n@vars: x, dx, w, prim, sw, h0, h1, h2, sh0, sh1, sh2, E, B, ϕ, ψ, lorenz\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.ControlVolume1D4F","page":"Type","title":"Kinetic.ControlVolume1D4F","text":"1D control volume with 4 distribution functions\n\nControlVolume1D4F(X, DX, W, PRIM, H0, H1, H2, H3, E0, B0, L)\n\n@vars: x, dx, w, prim, sw, h0, h1, h2, h3, sh0, sh1, sh2, sh3, E, B, ϕ, ψ, lorenz\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.ControlVolume2D","page":"Type","title":"Kinetic.ControlVolume2D","text":"2D control volume with no distribution function\n\nControlVolume2D(X::Real, DX::Real, Y::Real, DY::Real, W::AbstractArray, PRIM::AbstractArray)\n\n@vars: x, y, dx, dy, w, prim, sw\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.ControlVolume2D1F","page":"Type","title":"Kinetic.ControlVolume2D1F","text":"2D control volume with 1 distribution function\n\nControlVolume2D1F(X::Real, DX::Real, Y::Real, DY::Real, W::AbstractArray, PRIM::AbstractArray, F::AbstractArray)\n\n@vars: x, y, dx, dy, w, prim, sw, f, sf\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.ControlVolume2D2F","page":"Type","title":"Kinetic.ControlVolume2D2F","text":"2D control volume with 2 distribution functions\n\nControlVolume2D2F(X::Real, DX::Real, Y::Real, DY::Real, W::AbstractArray, PRIM::AbstractArray, H::AbstractArray, B::AbstractArray)\n\n@vars: x, y, dx, dy, w, prim, sw, h, b, sh, sb\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.ControlVolume2D3F","page":"Type","title":"Kinetic.ControlVolume2D3F","text":"2D control volume with 3 distribution functions\n\nControlVolume2D3F(X, DX, Y, DY, W, PRIM, H0, H1, H2, E0, B0, L)\n\n@vars: x, y, dx, dy, w, prim, sw, h0, h1, h2, sh0, sh1, sh2, E, B, ϕ, ψ, lorenz\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.Interface1D","page":"Type","title":"Kinetic.Interface1D","text":"1D cell interface with no distribution function\n\n@vars: fw\n\nInterface1D(w::AbstractArray)\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.Interface1D1F","page":"Type","title":"Kinetic.Interface1D1F","text":"1D cell interface with 1 distribution function\n\n@vars: fw, ff\n\nInterface1D1F(w::AbstractArray, f::AbstractArray)\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.Interface1D2F","page":"Type","title":"Kinetic.Interface1D2F","text":"1D cell interface with 2 distribution functions\n\n@vars: fw, fh, fb\n\nInterface1D2F(w::AbstractArray, f::AbstractArray)\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.Interface1D3F","page":"Type","title":"Kinetic.Interface1D3F","text":"1D cell interface with 3 distribution functions\n\n@vars: fw, fh0, fh1, fh2, femL, femR,\n\ndeterministic: Interface1D3F(w::AbstractArray, f::AbstractArray, E::AbstractArray{<:Real,1})\nstochastic: Interface1D3F(w::AbstractArray, f::AbstractArray, E::AbstractArray{<:Real,2})\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.Interface1D4F","page":"Type","title":"Kinetic.Interface1D4F","text":"1D cell interface with 4 distribution functions\n\n@vars: fw, fh0, fh1, fh2, fh3, femL, femR,\n\ndeterministic: Interface1D4F(w::AbstractArray, f::AbstractArray, E::AbstractArray{<:Real,1})\nstochastic: Interface1D4F(w::AbstractArray, f::AbstractArray, E::AbstractArray{<:Real,2})\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.Interface2D","page":"Type","title":"Kinetic.Interface2D","text":"2D cell interface with no distribution function\n\n@vars: len, n, fw\n\nInterface2D(L::Real, C::Real, S::Real, w::AbstractArray)\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.Interface2D1F","page":"Type","title":"Kinetic.Interface2D1F","text":"2D cell interface with 1 distribution function\n\n@vars: len, n, fw, ff\n\nInterface2D1F(L::Real, C::Real, S::Real, w::AbstractArray, f::AbstractArray)\n\n\n\n\n\n","category":"type"},{"location":"type/#Kinetic.Interface2D2F","page":"Type","title":"Kinetic.Interface2D2F","text":"2D cell interface with 2 distribution functions\n\n@vars: len, n, fw, fh, fb\n\nInterface2D2F(L::Real, C::Real, S::Real, w::AbstractArray, f::AbstractArray)\n\n\n\n\n\n","category":"type"},{"location":"api_math/#Math","page":"Math","title":"Math","text":"","category":"section"},{"location":"api_math/","page":"Math","title":"Math","text":"linspace\nheaviside\nfortsign\nmat_split\ncentral_diff\ncentral_diff!\nupwind_diff\nupwind_diff!\nunstruct_diff\nlgwt\nextract_last","category":"page"},{"location":"api_math/#Kinetic.linspace","page":"Math","title":"Kinetic.linspace","text":"Python linspace function\n\nlinspace(start::Real, stop::Real, n::Int)\n\n\n\n\n\n","category":"function"},{"location":"api_math/#Kinetic.heaviside","page":"Math","title":"Kinetic.heaviside","text":"Heaviside step function\n\nheaviside(x::Real)\n\n\n\n\n\n","category":"function"},{"location":"api_math/#Kinetic.fortsign","page":"Math","title":"Kinetic.fortsign","text":"Fortran sign function\n\nfortsign(x::Real, y::Real)\n\n\n\n\n\n","category":"function"},{"location":"api_math/#Kinetic.mat_split","page":"Math","title":"Kinetic.mat_split","text":"Split matrix into row vectors\n\nmat_split(m::AbstractArray)\n\n\n\n\n\n","category":"function"},{"location":"api_math/#Kinetic.central_diff","page":"Math","title":"Kinetic.central_diff","text":"Central difference\n\ncentral_diff(y::AbstractArray{<:Any,1}, x::AbstractArray{<:Any,1})\n\ncentral_diff(y::AbstractArray{<:Any,1}, dx::Any)\n\n\n\n\n\n","category":"function"},{"location":"api_math/#Kinetic.central_diff!","page":"Math","title":"Kinetic.central_diff!","text":"Central difference\n\ncentral_diff!(dy::AbstractArray{<:Any,1}, y::AbstractArray{<:Any,1}, x::AbstractArray{<:Any,1})\n\ncentral_diff!(dy::AbstractArray{<:Any,1}, y::AbstractArray{<:Any,1}, dx::Any)\n\n\n\n\n\n","category":"function"},{"location":"api_math/#Kinetic.upwind_diff","page":"Math","title":"Kinetic.upwind_diff","text":"Upwind difference\n\nupwind_diff(\n    y::AbstractArray{<:Any,1},\n    x::AbstractArray{<:Any,1};\n    stream = :right::Symbol,\n)\n\nupwind_diff(y::AbstractArray{<:Any,1}, dx::Any; stream = :right::Symbol)\n\n\n\n\n\n","category":"function"},{"location":"api_math/#Kinetic.upwind_diff!","page":"Math","title":"Kinetic.upwind_diff!","text":"Upwind difference\n\nupwind_diff!(\n    dy::AbstractArray{<:Any,1},\n    y::AbstractArray{<:Any,1},\n    x::AbstractArray{<:Any,1};\n    stream = :right::Symbol,\n)\n\nupwind_diff!(\n    dy::AbstractArray{<:Any,1},\n    y::AbstractArray{<:Any,1},\n    dx::Any;\n    stream = :right::Symbol,\n)\n\n\n\n\n\n","category":"function"},{"location":"api_math/#Kinetic.unstruct_diff","page":"Math","title":"Kinetic.unstruct_diff","text":"Finite difference for pseudo-unstructured mesh\n\nunstruct_diff(\n    u::AbstractArray{<:Any,1},\n    x::AbstractArray{<:Any,1},\n    nx::Int;\n    mode = :central::Symbol,\n)\n\nunstruct_diff(u::Function, x::AbstractArray{<:Any,2}, nx::Int, dim::Int; mode = :central::Symbol)\n\n\n\n\n\n","category":"function"},{"location":"api_flux/#Flux","page":"Flux","title":"Flux","text":"","category":"section"},{"location":"api_flux/","page":"Flux","title":"Flux","text":"flux_gks\nflux_gks!\nflux_kfvs!\nflux_kcu!\nflux_ugks!\nflux_boundary_maxwell!\nflux_lax!\nflux_hll!\nflux_roe!\nflux_em!\nflux_emx!\nflux_emy!","category":"page"},{"location":"api_flux/#Kinetic.flux_gks","page":"Flux","title":"Kinetic.flux_gks","text":"Gas kinetic Navier-Stokes flux\n\nflux_gks(u::Real, μ::Real, dt::Real, su = 0.0::Real, a = 0::Real)\n\nflux_gks(uL::Real, uR::Real, μ::Real, dt::Real, dxL::Real,     dxR::Real, suL = 0.0::Real, suR = 0.0::Real, a = 0::Real)\n\n@arg: conservative scalars and their slopes\n@arg: viscosity\n@arg: time step and cell size\n@return: scalar flux\n\n\n\n\n\n","category":"function"},{"location":"api_flux/#Kinetic.flux_gks!","page":"Flux","title":"Kinetic.flux_gks!","text":"Gas kinetic Navier-Stokes flux\n\n1D: flux_gks!(fw, wL, wR, γ, K, μᵣ, ω, dt, dx, swL, swR)\n2D: flux_gks!(fw, wL, wR, γ, K, μᵣ, ω, dt, dx, dy, swL, swR)\n@arg: conservative variables and their left/right slopes\n@arg: molecular and thermodynamic parameters\n@arg: time step and cell size\n\n\n\n\n\n","category":"function"},{"location":"api_flux/#Kinetic.flux_kfvs!","page":"Flux","title":"Kinetic.flux_kfvs!","text":"Kinetic flux vector splitting (KFVS) flux\n\nDOM: flux_kfvs!(ff, fL, fR, u, dt, sfL, sfR)\n1D1F1V: flux_kfvs!(fw, ff, fL, fR, u, ω, dt, sfL, sfR)\n1D1F3V: flux_kfvs!(fw, ff, fL, fR, u, v, w, ω, dt, sfL, sfR)\n1D2F1V: flux_kfvs!(fw, fh, fb, hL, bL, hR, bR, u, ω, dt, shL, sbL, shR, sbR)\n1D4F1V: flux_kfvs!(fw, fh0, fh1, fh2, fh3, h0L, h1L, h2L, h3L, h0R, h1R, h2R, h3R, u, ω, dt, sh0L, sh1L, sh2L, sh3L, sh0R, sh1R, sh2R, sh3R)\n2D1F2V: flux_kfvs!(fw, ff, fL, fR, u, v, ω, dt, len, sfL, sfR)\n2D2F2V: flux_kfvs!(fw, fh, fb, hL, bL, hR, bR, u, v, ω, dt, len, shL, sbL, shR, sbR)\n@arg: particle distribution functions and their left/right slopes\n@arg: particle velocity quadrature points and weights\n@arg: time step and cell size\n\n\n\n\n\n","category":"function"},{"location":"api_flux/#Kinetic.flux_kcu!","page":"Flux","title":"Kinetic.flux_kcu!","text":"Kinetic central-upwind (KCU) method\n\n@arg: particle distribution functions and their slopes at left/right sides of interface\n@arg: particle velocity quadrature points and weights\n@arg: time step and cell size\n\n\n\n\n\n","category":"function"},{"location":"api_flux/#Kinetic.flux_ugks!","page":"Flux","title":"Kinetic.flux_ugks!","text":"Unified gas kinetic scheme (UGKS) flux\n\n@arg: particle distribution functions and their slopes at left/right sides of interface\n@arg: particle velocity quadrature points and weights\n@arg: time step\n\n\n\n\n\n","category":"function"},{"location":"api_flux/#Kinetic.flux_boundary_maxwell!","page":"Flux","title":"Kinetic.flux_boundary_maxwell!","text":"Maxwell's diffusive boundary flux\n\n@arg: particle distribution functions and their slopes at left/right sides of interface\n@arg: particle velocity quadrature points and weights\n@arg: time step\n\n\n\n\n\n","category":"function"},{"location":"api_flux/#Kinetic.flux_lax!","page":"Flux","title":"Kinetic.flux_lax!","text":"Lax-Friedrichs flux\n\nflux_lax!(fw::AbstractArray{<:Real,1}, wL::AbstractArray{<:Real,1}, wR::AbstractArray{<:Real,1}, γ::Real, dt::Real, dx::Real)\n\nP. D. Lax, Weak Solutions of Nonlinear Hyperbolic Equations and Their Numerical Computation,  Commun. Pure and Applied Mathematics, 7, 159-193, 1954.\n\n\n\n\n\n","category":"function"},{"location":"api_flux/#Kinetic.flux_hll!","page":"Flux","title":"Kinetic.flux_hll!","text":"HLL flux for the Euler equations\n\nflux_hll!(fw::AbstractArray{<:Real,1}, wL::AbstractArray{<:Real,1}, wR::AbstractArray{<:Real,1}, γ::Real, dt::Real)\n\n@args: variables at left & right sides of interface\n@args: specific heat ratio\n\n\n\n\n\n","category":"function"},{"location":"api_flux/#Kinetic.flux_roe!","page":"Flux","title":"Kinetic.flux_roe!","text":"Roe's flux with entropy fix\n\nflux_roe!(fw::AbstractArray{<:Real,1}, wL::AbstractArray{<:Real,1}, wR::AbstractArray{<:Real,1},     γ::Real, dt::Real, n = [1.0, 0.0]::AbstractArray{<:Real,1})\n\nP. L. Roe, Approximate Riemann Solvers, Parameter Vectors and Difference Schemes, Journal of Computational Physics, 43, pp. 357-372. (cf. http://cfdbooks.com/cfdcodes.html)\n\n@args primL[1:4] = left state (rhoL, uL, vL, pL)\n@args primR[1:4] = right state (rhoR, uR, vR, pR)\n@args γ: specific heat ratio\n@args n[2]: unit face normal (L -> R)\n\n\n\n\n\n","category":"function"},{"location":"api_flux/#Kinetic.flux_em!","page":"Flux","title":"Kinetic.flux_em!","text":"Wave propagation method for Maxwell's equations\n\nflux_em!(femL, femR, ELL, BLL, EL, BL, ER, BR, ERR, BRR, ϕL, ϕR, ψL, ψR, dxL, dxR, Ap, An, D, sol, χ, ν, dt)\n\n@args: {E, B, ϕ, ψ} in left-left, left, right, and right-right cells\n@args: eigenmatrix (A -> A+ & A-), eigenvalue (D)\n@args: full size of left & right cells\n@args: speed of light (sol)\n@args: auxiliary parameters (χₑ, νᵦ)\n\n\n\n\n\n","category":"function"},{"location":"api_flux/#Kinetic.flux_emx!","page":"Flux","title":"Kinetic.flux_emx!","text":"Wave propagation method for 2D Maxwell's equations\n\nflux_emx!(femL, femR, femLU, femLD, femRU, femRD,  ELL, BLL, EL, BL, ER, BR, ERR, BRR, ϕL, ϕR, ψL, ψR,  dxL, dxR, A1p, A1n, A2p, A2n, D, sol, χ, ν, dt)\n\n@args: {E, B, ϕ, ψ} in left-left, left, right, and right-right cells\n@args: eigenmatrix (A -> A+ & A-), eigenvalue (D)\n@args: full size of left & right cells\n@args: speed of light (sol)\n@args: auxiliary parameters (χₑ, νᵦ)\n\n\n\n\n\n","category":"function"},{"location":"api_flux/#Kinetic.flux_emy!","page":"Flux","title":"Kinetic.flux_emy!","text":"Wave propagation method for 2D Maxwell's equations\n\nflux_emx!(femL, femR, femLU, femLD, femRU, femRD,  ELL, BLL, EL, BL, ER, BR, ERR, BRR, ϕL, ϕR, ψL, ψR,  dxL, dxR, A1p, A1n, A2p, A2n, D, sol, χ, ν, dt)\n\n@args: {E, B, ϕ, ψ} in left-left, left, right, and right-right cells\n@args: eigenmatrix (A -> A+ & A-), eigenvalue (D)\n@args: full size of left & right cells\n@args: speed of light (sol)\n@args: auxiliary parameters (χₑ, νᵦ)\n\n\n\n\n\n","category":"function"},{"location":"algorithm/#Solution-Algorithm","page":"Algorithm","title":"Solution Algorithm","text":"","category":"section"},{"location":"algorithm/","page":"Algorithm","title":"Algorithm","text":"The finite volume method (FVM) is employed in this package. The general solution algorithm can be conclude as follows, where both explicit and implicit methods are implemented.","category":"page"},{"location":"algorithm/","page":"Algorithm","title":"Algorithm","text":"(Image: )","category":"page"},{"location":"algorithm/","page":"Algorithm","title":"Algorithm","text":"(1) pre-process: initialize(configfilename::AbstractString)","category":"page"},{"location":"algorithm/","page":"Algorithm","title":"Algorithm","text":"new run: .txt / .cfg / .toml\nrestart: .jld2 (HDF5) -> solSet, ctr, face, t","category":"page"},{"location":"algorithm/","page":"Algorithm","title":"Algorithm","text":"(2) calculate timestep based on the CFL condition","category":"page"},{"location":"algorithm/","page":"Algorithm","title":"Algorithm","text":"(3) reconstruct field solutions","category":"page"},{"location":"algorithm/","page":"Algorithm","title":"Algorithm","text":"van-Leer\nminmod\nsuperbee\nWENO","category":"page"},{"location":"algorithm/","page":"Algorithm","title":"Algorithm","text":"(4) evolve numerical fluxes","category":"page"},{"location":"algorithm/","page":"Algorithm","title":"Algorithm","text":"macroscopic: Godunov, Lax, Roe, HLL, wave-propagation\nmesoscopic: upwind, central-upwind, gas-kinetic scheme","category":"page"},{"location":"algorithm/","page":"Algorithm","title":"Algorithm","text":"(5) update cell-averaged variables","category":"page"},{"location":"algorithm/","page":"Algorithm","title":"Algorithm","text":"explicit\nimplicit\nimplicit-explicit (IMEX)","category":"page"},{"location":"algorithm/","page":"Algorithm","title":"Algorithm","text":"(6) post-process","category":"page"},{"location":"#Kinetic.jl","page":"Home","title":"Kinetic.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Kinetic.jl is a lightweight toolbox for modeling and simulation on the basis of kinetic theory of gases, photons, plasmas and neutrons. It can be used to solve either Boltzmann and its related model equations","category":"page"},{"location":"","page":"Home","title":"Home","text":"fracpartial fpartial t+ mathbf u cdot nabla_mathbf x f + mathbf a cdot nabla_mathbf u f = int_mathcal R^3 int_mathcal S^2 B (f(mathbf u_*)f(mathbf u)-f(mathbf u_*) f(mathbf u)) dOmega dmathbf u_*","category":"page"},{"location":"","page":"Home","title":"Home","text":"or their upscaling moment system","category":"page"},{"location":"","page":"Home","title":"Home","text":"fracpartial mathbf Wpartial t + nabla_mathbf x cdot mathbf F = mathbf S","category":"page"},{"location":"","page":"Home","title":"Home","text":"The solution algorithms are organized using the finite volume method (FVM), and can be run in 1-3 dimensions on CPUs and GPUs. The user interface is designed as intuitive and neat as possible, allowing users to focus on physics and to cooperate with existing packages in the Julialang ecosystem.","category":"page"},{"location":"#Getting-help","page":"Home","title":"Getting help","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you are interested in using Kinetic.jl or are trying to figure out how to use it, please feel free to get in touch and raise questions. Open an issue or pull request if you have questions, suggestions or solutions.","category":"page"}]
}
