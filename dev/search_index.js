var documenterSearchIndex = {"docs":
[{"location":"#Overview","page":"Overview","title":"Overview","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"Kinetic.jl is a collection of numerical routines for orthogonal polynomials written in the Julia programming language. Starting from some non-negative weight (aka an absolutely continuous nonnegative measure), PolyChaos allows","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"to compute the coefficients for the monic three-term recurrence relation,\nto evaluate the orthogonal polynomials at arbitrary points,\nto compute the quadrature rule,\nto compute tensors of scalar products,\nto do all of the above in a multivariate setting (aka product measures).","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"pdf_slope\nmaxwellian","category":"page"},{"location":"#Kinetic.pdf_slope","page":"Overview","title":"Kinetic.pdf_slope","text":"Calculate slope of particle distribution function, assuming a = a1 + u * a2 + 0.5 * u^2 * a3\n\npdf_slope(u::Real, Î”::Real)\n\npdf_slope(prim::AbstractArray{<:Real,1}, sw::AbstractArray{<:Real,1}, inK::Real)\n\n\n\n\n\n","category":"function"},{"location":"#Kinetic.maxwellian","page":"Overview","title":"Kinetic.maxwellian","text":"Maxwellian in discrete form\n\n@arg: particle velocity quadrature points\n@arg: density, velocity and inverse of temperature\n@return: Maxwellian distribution function\n\n\n\n\n\n","category":"function"}]
}
